#!/bin/bash

OUTPUT="Makefile"
if [ ! -z "$CPPFLAGS" ]; then
    CPPFLAGS="$CPPFLAGS -std=c++0x -g -MMD -Wall"
else
    CPPFLAGS="-std=c++0x -g -MMD -Wall"
fi
if [ -z "$CXX" ]; then
    CXX="g++"
fi

if [ -e $OUTPUT ]; then
    echo "make clean"
    make clean > /dev/null
fi

# checking for boost thread library
thread_libraries="boost_thread-mt boost_thread"
for lib in ${thread_libraries}; do
    echo "checking for lib$lib"
    if [ -e $(g++ -print-file-name=lib$lib.a) ]; then
        thread_library=$lib
    fi
    if [ -e $(g++ -print-file-name=lib$lib.so) ]; then
        thread_library=$lib
    fi
done
if [ -z $thread_library ]; then
    if [ $(uname) == "Darwin" ]; then
        # Macintosh
        # in Mavericks, "gcc -print-file-name" doesn't work.
        brewlist=$(brew list)
        echo "checking for boost library"
        # Homebrew
        for module in ${brewlist[@]}; do
            if [ $module == "boost" ]; then
                thread_library="boost_thread-mt"
            fi
        done
        if [ -z $thread_library ]; then
            echo "Please install \"boost\" via Homebrew"
            exit
        fi
    else
        echo "Please install \"boost\""
        exit
    fi
fi


rm -rf $OUTPUT

echo "CXX = $CXX" >> $OUTPUT
echo 'RM = rm -f' >> $OUTPUT
echo "CPPFLAGS = $CPPFLAGS" >> $OUTPUT
echo 'LINK.o = g++' >> $OUTPUT

echo '
build_dir = build
test_dir = $(build_dir)/tests

target = filter
target_src = filter_main.cpp
target_obj = $(build_dir)/$(target_src:.cpp=.o)

srcs = $(wildcard *.cpp)
obj_srcs = $(filter-out $(target_src), $(srcs))
objs = $(addprefix $(build_dir)/, $(obj_srcs:.cpp=.o))
depends = $(srcs:.cpp=.d)

test_srcs = $(wildcard tests/*.cpp)
tests = $(addprefix $(build_dir)/, $(test_srcs:.cpp=))
test_depends = $(test_srcs:.cpp=.d)

vpath %.o $(build_dir)

.PHONY: all
all: $(build_dir) $(target)

.PHONY: clean
clean:
	$(RM) $(target) $(build_dir)/*.o $(build_dir)/*.d
	$(RM) $(test_dir)/*' >> $OUTPUT


echo "
\$(target): \$(target_obj) \$(objs)
	\$(CXX) \$(CPPFLAGS) -o \$@ $^ -lboost_system -l$thread_library -lboost_program_options" >> $OUTPUT

echo '
$(build_dir):
	mkdir -p $@

.PRECIOUS: $(build_dir)/%.o
$(build_dir)/%.o: %.cpp
	$(CXX) $(CPPFLAGS) -o $@ -c $<

.PHONY: test
test: $(test_dir) $(tests)

$(test_dir):
	mkdir -p $@

$(test_dir)/%_test: $(test_dir)/%_test.o $(objs)
	$(CXX) $(CPPFLAGS) -o $@ $^
	$@

.PRECIOUS: $(test_dir)/%_test.o
$(test_dir)/%_test.o: tests/%_test.cpp %.hpp
	$(CXX) $(CPPFLAGS) -o $@ -c $<

-include $(depends)
-include $(test_depends)' >> $OUTPUT

echo 'finished.'
